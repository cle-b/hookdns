name: Build

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Linter and code format verification
      run: |
        pip install -r requirements-dev.txt
        make lint        
    - name: Run all tests + code coverage
      run: |
        pip install coveralls
        make coverage
        coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.COVERALLS }}

  testpythons:
    name: Test all Python version
    needs: test
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run tests
      run: |
        make ci

  deploy:
    name: Deploy on Pypi
    needs: testpythons
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install pypa/build
      run: |
        python -m pip install --upgrade pip
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
    - name: Publish package on Pypi
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}